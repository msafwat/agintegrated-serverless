AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  LambdaFunctionName: 
    Type: String
  CronExpression:
    Type: String
  SNSTopicArn:
    Type: String
  LogGroupArn:
    Type: String
  Stage:
    Type: String
  CouchBaseUserName:
    Type: String
  CouchBasePassword:
    Type: String
  AgIntegratedMasterKey:
    Type: String
  AgIntegratedSecret:
    Type: String
  FollowingQueueArn:
    Type: String

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Role: !GetAtt [LambdaRole, Arn]
      Handler: index.handler
      Runtime: nodejs10.x
      Timeout: 180
      Environment:
        Variables:
          ENVIRONMENT: !Ref Stage 
          CouchBaseUserName: !Ref CouchBaseUserName
          CouchBasePassword: !Ref CouchBasePassword
          AgIntegratedMasterKey: !Ref AgIntegratedMasterKey
          AgIntegratedSecret: !Ref AgIntegratedSecret
      CodeUri: ./dist/
      Events:
          MySchedule:
            Type: Schedule
            Properties:
              Schedule: !Ref CronExpression

  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
        # RoleName: !Join
        #   - '-'
        #   - - !Ref LambdaFunctionName
        #     - 'Execution-Role'
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Principal:
              Service:
                  - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
        Path: /
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Policies:
          - PolicyName: !Join
            - '-'
            - - !Ref LambdaFunctionName
              - 'Execution-Role'
            PolicyDocument:
              Version: 2012-10-17
              Statement:
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource: !Ref SNSTopicArn 
              - Effect: Allow
                Action:
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogStreams'
                Resource: !Ref LogGroupArn
              - Effect: Allow
                Action:
                  - 'sqs:*'
                Resource: !Ref FollowingQueueArn

  Dashboard:
        Type: AWS::CloudWatch::Dashboard
        Properties: 
          DashboardName: !Join
            - '-'
            - 
                - !Ref LambdaFunctionName
                - 'dashboard'
          DashboardBody: !Join
            - ''
            -
              - '{
                    "widgets": [
                        {
                            "type": "metric",
                            "x": 0,
                            "y": 1,
                            "width": 24,
                            "height": 6,
                            "properties": {
                                "view": "timeSeries",
                                "stacked": false,
                                "metrics": [
                                    [ "AWS/Lambda", "Throttles", "FunctionName", "'
              - !Ref LambdaFunction
              - '" ],
                                    [ ".", "Invocations", ".", "." ],
                                    [ ".", "Errors", ".", "." ]
                                ],
                                "region": "'
              - !Ref "AWS::Region"
              - '",
                                "title": "'
              - !Ref LambdaFunction
              - '"
                            }
                        },
                        {
                            "type": "metric",
                            "x": 0,
                            "y": 7,
                            "width": 24,
                            "height": 6,
                            "properties": {
                                "view": "timeSeries",
                                "stacked": false,
                                "metrics": [
                                    [ "AWS/Lambda", "Duration", "FunctionName", "'
              - !Ref LambdaFunction
              - '" ]
                                ],
                                "region": "'
              - !Ref "AWS::Region"
              - '",
                                "title": "'
              - !Join [ '-', [!Ref LambdaFunction, 'Duration'] ]
              - '"
                            }
                }
                ,
                {
                    "type": "text",
                    "x": 0,
                    "y": 0,
                    "width": 24,
                    "height": 1,
                    "properties": {
                        "markdown": "\n# Lambda\n"
                    }
                }
            ]
        }'

Outputs:
  LinkToLambdaFunction:
    Value: 
        Fn::Join: ["",["https://",Ref: "AWS::Region",".console.aws.amazon.com/lambda/home?region=",Ref: "AWS::Region","#/functions/",Ref: "LambdaFunction","?tab=graph"]]
